{"version":3,"sources":["icons/search.svg","components/SearchBar/SearchBar.jsx","utils/highlightCode.js","components/CodeCard/CodeCard.jsx","utils/prettierFormat.js","components/DialogUrl/DialogUrl.jsx","api/CodesSample.js","api/api.js","App.js","serviceWorker.js","index.js","../node_modules/prettier-plugin-java/node_modules/prettier sync"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","id","_ref3","xlinkHref","opacity","fill","fillOpacity","stroke","strokeWidth","strokeOpacity","_ref","svgRef","title","props","preserveAspectRatio","viewBox","width","height","ref","ForwardRef","forwardRef","useStylesSearch","makeStyles","root","fontFamily","SearchIconAdornment","InputAdornment","position","style","SearchBar","classes","Fragment","TextField","variant","InputProps","endAdornment","placeholder","hljs","registerLanguage","java","useStylesCodeItem","cardContainer","fontSize","card","boxShadow","borderRadius","border","LoadingCard","size","Array","map","animation","CodeCard","code","loading","highlightedCode","highlight","highlightCode","codeInClass","putInsideClassScope","formattedCode","split","slice","join","removeFromClassScope","prettier","format","parser","tabWidth","plugins","prettierPluginJava","e","console","log","formatCode","Grid","item","className","Card","CardContent","dangerouslySetInnerHTML","__html","value","DialogUrl","modelUrl","setModelUrl","useState","open","setOpen","error","setError","Dialog","DialogTitle","DialogContent","label","onChange","DialogActions","Button","color","onClick","match","responseCodesSample","codes","searchCode","query","numResults","params","n_results","url","queryString","stringify","fetch","then","res","json","Promise","resolve","useStyles","html","backgroundColor","searchBar","margin","appbar","appbarMargin","App","setQuery","setCodes","setLoading","useEffect","AppBar","onKeyPress","Container","maxWidth","container","spacing","index","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message","webpackEmptyContext","req","Error","module","exports"],"mappings":"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","file":"static/js/main.6409568f.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M364.03 290.1C363.74 289.81 363.45 289.55 363.13 289.31C352.14 277.91 345.39 262.4 345.39 245.31C345.39 227.79 352.47 211.94 363.96 200.45C375.46 188.96 391.31 181.87 408.83 181.87C426.34 181.87 442.19 188.96 453.69 200.45C465.18 211.94 472.27 227.79 472.27 245.31C472.27 262.83 465.18 278.68 453.69 290.17C442.19 301.66 426.34 308.75 408.83 308.75C391.73 308.75 376.23 302 364.82 290.99C364.58 290.69 364.32 290.39 364.03 290.1ZM357.91 309.04C371.87 320.19 389.57 326.87 408.83 326.87C431.35 326.87 451.75 317.74 466.5 302.98C481.26 288.23 490.39 267.83 490.39 245.31C490.39 222.79 481.26 202.39 466.5 187.63C451.75 172.88 431.35 163.74 408.83 163.74C386.3 163.74 365.9 172.88 351.15 187.63C336.4 202.39 327.26 222.79 327.26 245.31C327.26 264.57 333.94 282.27 345.1 296.22C341.77 299.55 315.12 326.2 311.79 329.53C308.25 333.07 308.25 338.81 311.79 342.34C315.33 345.88 321.07 345.89 324.61 342.34C331.27 335.68 354.58 312.37 357.91 309.04Z\",\n  id: \"c2iEpNTlwn\"\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"use\", {\n  xlinkHref: \"#c2iEpNTlwn\",\n  opacity: 1,\n  fill: \"#9da5b5\",\n  fillOpacity: 1\n}), /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"use\", {\n  xlinkHref: \"#c2iEpNTlwn\",\n  opacity: 1,\n  fillOpacity: 0,\n  stroke: \"#000000\",\n  strokeWidth: 1,\n  strokeOpacity: 0\n}))));\n\nvar SvgSearch = function SvgSearch(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    preserveAspectRatio: \"xMidYMid meet\",\n    viewBox: \"308.1327812170469 162.74369872856823 185.25800000000027 185.25460254286367\",\n    width: 181.26,\n    height: 181.25,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgSearch, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/search.16e49d9d.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\r\n\r\nimport TextField from '@material-ui/core/TextField'\r\nimport InputAdornment from '@material-ui/core/InputAdornment'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { ReactComponent as SearchIcon } from '../../icons/search.svg'\r\n\r\nconst useStylesSearch = makeStyles(() => ({\r\n\troot: {\r\n\t\tfontFamily: 'Menlo',\r\n\t}\r\n}))\r\n\r\nconst SearchIconAdornment = () => (\r\n\t<InputAdornment position=\"end\">\r\n\t\t<SearchIcon style={{width: '1.5em'}} />\r\n\t</InputAdornment>\r\n)\r\n\r\nexport default function SearchBar(props) {\r\n\tconst classes = useStylesSearch()\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<TextField\r\n\t\t\t\tvariant='outlined'\r\n\t\t\t\tInputProps={{classes, endAdornment: <SearchIconAdornment />}}\r\n\t\t\t\tplaceholder='Search for java code'\r\n\t\t\t\t{...props}\r\n\t\t\t/>\r\n\t\t</React.Fragment>)\r\n}\r\n","import hljs from 'highlight.js/lib/core'\r\nimport java from 'highlight.js/lib/languages/java'\r\n\r\nhljs.registerLanguage('java', java)\r\n\r\nexport const highlightCode = (code) => {\r\n\treturn hljs.highlight('java', code)\r\n}\r\n","import React from 'react'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport { formatCode } from '../../utils/prettierFormat'\r\nimport { highlightCode } from '../../utils/highlightCode'\r\n\r\nimport Skeleton from '@material-ui/lab/Skeleton/Skeleton'\r\n\r\nconst useStylesCodeItem = makeStyles(() => ({\r\n\tcardContainer: {\r\n\t\twidth: '100%',\r\n\t\tfontSize: '1.10em'\r\n\t},\r\n\tcard: {\r\n\t\tboxShadow: 'none',\r\n\t\tborderRadius: '6px',\r\n\t\tborder: '1px solid #D7DAE0'\r\n\t}\r\n}))\r\n\r\nconst LoadingCard = ( {size} ) => {\r\n\treturn [...Array(size).keys()].map((key) =>\r\n\t\t<Skeleton key={key} variant=\"text\" animation=\"wave\"/>\r\n\t)\r\n}\r\n\r\nexport default function CodeCard({ code, loading }) {\r\n\tconst classes = useStylesCodeItem()\r\n\tconst formattedText = formatCode(code)\r\n\tconst highlightedCode = highlightCode(formattedText)\r\n\r\n\treturn <Grid item className={classes.cardContainer}>\r\n\t\t<Card className={classes.card}>\r\n\t\t\t<CardContent>\r\n\t\t\t\t<pre>\r\n\t\t\t\t\t<code>\r\n\t\t\t\t\t\t{!loading?\r\n\t\t\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: highlightedCode.value }} />\r\n\t\t\t\t\t\t\t: <LoadingCard size={6}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</code>\r\n\t\t\t\t</pre>\r\n\t\t\t</CardContent>\r\n\t\t</Card>\r\n\t</Grid>\r\n}\r\n","import prettier from 'prettier/standalone'\r\nimport prettierPluginJava from 'prettier-plugin-java'\r\n\r\n// Without these hacks, it would crash\r\nconst putInsideClassScope = code => `public class Prettier {${code}}`\r\nconst removeFromClassScope = formattedCode => formattedCode.split('\\n').slice(2, -2).join('\\n')\r\n\r\nexport const formatCode = (code) => {\r\n\ttry {\r\n\t\tconst codeInClass = putInsideClassScope(code)\r\n\t\tconst formattedCode = prettier.format(codeInClass, {\r\n\t\t\tparser: 'java',\r\n\t\t\ttabWidth: 2,\r\n\t\t\tplugins: [prettierPluginJava]\r\n\t\t})\r\n\t\treturn removeFromClassScope(formattedCode)\r\n\t} catch (e) {\r\n\t\tconsole.log(e)\r\n\t\treturn code\r\n\t}\r\n}\r\n","import React, { useState } from 'react'\r\nimport Dialog from '@material-ui/core/Dialog'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport DialogActions from '@material-ui/core/DialogActions'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nfunction isValidURL(str) {\r\n\tconst res = str.match(/(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g)\r\n\treturn (res !== null)\r\n}\r\n\r\nexport default function DialogUrl({ modelUrl, setModelUrl }) {\r\n\tconst [open, setOpen] = useState(true)\r\n\tconst [error, setError] = useState(false)\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false)\r\n\t}\r\n\r\n\tfunction validateUrl() {\r\n\t\tif(isValidURL(modelUrl))\r\n\t\t\thandleClose()\r\n\t\telse\r\n\t\t\tsetError(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Dialog open={open}>\r\n\t\t\t<DialogTitle>\r\n      Model URL:\r\n\t\t\t</DialogTitle>\r\n\t\t\t<DialogContent>\r\n\t\t\t\t<TextField\r\n\t\t\t\t\tlabel='url'\r\n\t\t\t\t\tvalue={modelUrl}\r\n\t\t\t\t\tstyle={{width: '20em'}}\r\n\t\t\t\t\terror={error}\r\n\t\t\t\t\tonChange={(e) => setModelUrl(e.target.value)} />\r\n\t\t\t</DialogContent>\r\n\t\t\t<DialogActions>\r\n\t\t\t\t<Button color='primary' variant=\"contained\" onClick={validateUrl}>\r\n        Set\r\n\t\t\t\t</Button>\r\n\t\t\t</DialogActions>\r\n\t\t</Dialog>\r\n\t)\r\n}\r\n","// from query: \"string to int\"\r\nexport const codesSample = ['public static int parseInt ( String str , int radix ) { return parseInt ( str , radix , false ) ; } \\n',\r\n\t'public static void setDatatypeConverter ( DatatypeConverterInterface converter ) { if ( converter == null ) { throw new IllegalArgumentException ( Messages . format ( Messages . CONVERTER_MUST_NOT_BE_NULL ) ) ; } else if ( theConverter == null ) { theConverter = converter ; } } \\n',\r\n\t'public static String toBinaryString ( int i ) { return toUnsignedString ( i , 1 ) ; } \\n',\r\n\t'public static int parseInt ( String s ) { return parseInt ( s , 10 , false ) ; } \\n',\r\n\t'public static int [ ] toInt ( String [ ] ss ) { int [ ] is = new int [ ss . length ] ; for ( int i = 0 ; i < is . length ; i ++ ) { is [ i ] = Integer . parseInt ( ss [ i ] ) ; } return is ; } \\n',\r\n\t'public void sortTestMethods ( ) { this . sortedTestMethodsByStartTime = new ArrayList < MethodResult > ( ) ; Map < Date , List < MethodResult >> map = new HashMap < Date , List < MethodResult >> ( ) ; for ( ClassResult aClass : classList ) { if ( aClass . getTestMethods ( ) != null ) { for ( MethodResult aMethod : aClass . getTestMethods ( ) ) { Date startDate = aMethod . getStartedAt ( ) ; if ( ! aMethod . getStatus ( ) . equalsIgnoreCase ( \"skip\" ) && startDate != null ) { if ( map . containsKey ( startDate ) ) { map . get ( startDate ) . add ( aMethod ) ; } else { List < MethodResult > list = new ArrayList < MethodResult > ( ) ; list . add ( aMethod ) ; map . put ( startDate , list ) ; } } } } } List < Date > keys = new ArrayList < Date > ( map . keySet ( ) ) ; Collections . sort ( keys ) ; for ( Date key : keys ) { if ( map . containsKey ( key ) ) { this . sortedTestMethodsByStartTime . addAll ( map . get ( key ) ) ; } } } \\n',\r\n\t'public void setInt ( String name , int value ) { set ( name , Integer . toString ( value ) ) ; } \\n',\r\n\t'public synchronized void setIfUnset ( String name , String value ) { if ( get ( name ) == null ) { set ( name , value ) ; } } \\n',\r\n\t'public synchronized void setIfUnset ( String name , String value ) { if ( get ( name ) == null ) { set ( name , value ) ; } } \\n',\r\n\t'public String numToString ( int aPrecision , int aBase ) { if ( javaBigInteger != null ) { return javaBigInteger . toString ( aBase ) ; } else { String result = javaBigDecimal . toPlainString ( ) ; result = result . replace ( \"+\" , \"\" ) ; return result ; } } \\n']\r\n","import { codesSample } from './CodesSample'\r\nimport queryString from 'querystring'\r\n\r\nconst responseCodesSample = {\r\n\tcodes: codesSample\r\n}\r\n\r\nconst searchCode = (modelUrl, query, numResults) => {\r\n\tif(!query)\r\n\t\treturn Promise.resolve(responseCodesSample)\r\n\telse {\r\n\t\tconst params = { query: query, n_results: numResults }\r\n\t\tconst url = `${modelUrl}?${queryString.stringify(params)}`\r\n\t\tconsole.log(url)\r\n\t\treturn fetch(url)\r\n\t\t\t.then(res => res.json())\r\n\t}\r\n}\r\n\r\nexport default searchCode\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Container from '@material-ui/core/Container'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport SearchBar from './components/SearchBar/SearchBar'\r\nimport CodeCard from './components/CodeCard/CodeCard'\r\nimport DialogUrl from './components/DialogUrl/DialogUrl'\r\nimport searchCode from './api/api'\r\n\r\nimport 'highlight.js/styles/github-gist.css'\r\nimport './App.css'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n\t'@global': {\r\n\t\thtml: {\r\n\t\t\tbackgroundColor: '#eeeeef',\r\n\t\t\tfontFamily: 'Menlo',\r\n\t\t}\r\n\t},\r\n\tsearchBar: {\r\n\t\tborderRadius: '6px',\r\n\t\tborder: '1px solid #D7DAE0',\r\n\t\tbackgroundColor: '#fff',\r\n\t\twidth: '57em',\r\n\t\tmargin: 'auto',\r\n\t},\r\n\tappbar: {\r\n\t\theight: '6em',\r\n\t\tbackgroundColor: '#fff',\r\n\t\tboxShadow: 'none',\r\n\t},\r\n\tappbarMargin: {\r\n\t\theight: '8em',\r\n\t}\r\n}))\r\n\r\nfunction App() {\r\n\tconst classes = useStyles()\r\n\tconst [modelUrl, setModelUrl] = useState('')\r\n\tconst [query, setQuery] = useState('')\r\n\tconst [codes, setCodes] = useState([])\r\n\tconst [loading, setLoading] = useState(false)\r\n\r\n\tuseEffect(() => {\r\n\t\tsearchCode(modelUrl, '', 10)\r\n\t\t\t.then(codes => {\r\n\t\t\t\tsetCodes(codes.codes)\r\n\t\t\t})\r\n\t}, [])\r\n\r\n\tconst handleKeyPress = (e) => {\r\n\t\tif (e.key === 'Enter') {\r\n\t\t\t// Busqueda de codigo\r\n\t\t\tsetLoading(true)\r\n\t\t\tsearchCode(modelUrl, query, 10)\r\n\t\t\t\t.then(codes => {\r\n\t\t\t\t\tsetCodes(codes.codes)\r\n\t\t\t\t\tsetLoading(false)\r\n\t\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<DialogUrl modelUrl={modelUrl} setModelUrl={setModelUrl}/>\r\n\t\t\t<AppBar position='fixed' className={classes.appbar}>\r\n\t\t\t\t<SearchBar\r\n\t\t\t\t\tclassName={classes.searchBar}\r\n\t\t\t\t\tvalue={query}\r\n\t\t\t\t\tonChange={(e) => setQuery(e.target.value)}\r\n\t\t\t\t\tonKeyPress={handleKeyPress}\r\n\t\t\t\t/>\r\n\t\t\t</AppBar>\r\n\t\t\t<div className={classes.appbarMargin} />\r\n\t\t\t<Container maxWidth=\"md\">\r\n\t\t\t\t<Grid container spacing={3}>\r\n\t\t\t\t\t{codes.map((code, index) => (\r\n\t\t\t\t\t\t<CodeCard key={index} code={code} loading={loading} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</Grid>\r\n\t\t\t</Container>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 64;"],"sourceRoot":""}